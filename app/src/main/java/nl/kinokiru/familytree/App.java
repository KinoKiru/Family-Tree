/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package nl.kinokiru.familytree;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

import nl.kinokiru.familytree.models.FamilyMember;
import nl.kinokiru.familytree.models.Person;

public class App {
    public static void main(String[] args) {
        ArrayList<Person> personList = new ArrayList<>();
        ArrayList<String> namesList = new ArrayList<>();

        // load names.txt in a stream
        var namesStream = App.class.getClassLoader().getResourceAsStream("names.txt");
        // Load stream in scanner
        Scanner src = new Scanner(namesStream);
        while (src.hasNextLine()) {
            // adds name to list
            namesList.add(src.nextLine());
        }
        // closes reader
        src.close();

        Collections.shuffle(namesList);

        for (int i = 0; i <= 100; i++) {
            int age = ((int) Math.floor(Math.random() * 100) + 1);
            String ssn = generateSSN(8);
            personList.add(new FamilyMember(namesList.get(i), age, ssn));
        }

        for (Person member : personList) {
            for (int i = 0; i < ((int) Math.floor(Math.random() * 4) + 1); i++) {
                member.addFriend(personList.get(((int) Math.floor(Math.random() * personList.size()))));
            }
        }

        Person friend = personList.get(0);
        Person target = personList.get(3);
        System.out.println("friend " + friend.getName() + "; target " + target.getName());
        System.out.println(friend.getFamilyTree(target));
    }

    public static String generateSSN(int length) {
        final StringBuilder sb = new StringBuilder();
        for (int i = 0; i < length; i++) {
            sb.append((char) ((Math.random() * 26) + 97)); 
        }
        return sb.toString();
    }
}
